{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doodl\\\\my-app\\\\src\\\\hooksExercise.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { ThemeContext, themes } from \"./themeContext\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Import the Label type from the appropriate module\n\nexport function LikeButtonClicked(props) {\n  _s();\n  const [likeState, setLikeState] = useState(\"🤍\");\n  useEffect(() => {}, [likeState]);\n  const toggleLike = () => {\n    setLikeState(likeState === \"🤍\" ? \"❤️\" : \"🤍\");\n    if (props.likeNotes.includes(props.newNote)) {\n      const newLikeNotes = props.likeNotes.filter(aNote => aNote !== props.newNote);\n      props.setLikeNotes([...newLikeNotes]);\n    } else {\n      props.setLikeNotes([...props.likeNotes, props.newNote]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleLike,\n    children: likeState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(LikeButtonClicked, \"vupmHhYdP5JyuOQpuqIfvSQapL4=\");\n_c = LikeButtonClicked;\nexport function ToggleTheme() {\n  _s2();\n  const toggleTheme = () => {\n    setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n  };\n  useEffect(() => {\n    // const app = document.getElementById(\"head\");\n    // if (app != null) {\n    //     app.style.backgroundColor = currentTheme.foreground;\n    //     app.style.color = currentTheme.background;\n    // }\n\n    // const form = document.getElementById(\"form\");\n    // if (form != null) {\n    //     form.style.backgroundColor = currentTheme.foreground;\n    //     form.style.color = currentTheme.background;\n    // }\n\n    // const noteList = document.getElementsByClassName(\"note-item\");\n    // for (let i = 0; i < noteList.length; i++) {\n    //     const aNote = noteList[i];\n    //     if (aNote instanceof HTMLElement) {\n    //         aNote.style.backgroundColor = currentTheme.foreground;\n    //         aNote.style.color = currentTheme.background;\n    //     }\n    // }\n  }, [toggleTheme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: currentTheme,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      children: \" Toggle Theme \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n_s2(ToggleTheme, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = ToggleTheme;\nfunction ClickCounter() {\n  _s3();\n  const [count, setCount] = useState(0);\n  const theme = useContext(ThemeContext);\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: theme.background,\n      color: theme.foreground,\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      style: {\n        background: theme.foreground,\n        color: theme.background\n      },\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s3(ClickCounter, \"5AsnjtDRci7PAI4AJ9X2Rty94qc=\");\n_c3 = ClickCounter;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LikeButtonClicked\");\n$RefreshReg$(_c2, \"ToggleTheme\");\n$RefreshReg$(_c3, \"ClickCounter\");","map":{"version":3,"names":["React","useState","useEffect","useContext","ThemeContext","themes","jsxDEV","_jsxDEV","LikeButtonClicked","props","_s","likeState","setLikeState","toggleLike","likeNotes","includes","newNote","newLikeNotes","filter","aNote","setLikeNotes","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ToggleTheme","_s2","toggleTheme","setCurrentTheme","currentTheme","light","dark","Provider","value","_c2","ClickCounter","_s3","count","setCount","theme","handleClick","document","title","style","background","color","foreground","padding","_c3","$RefreshReg$"],"sources":["C:/Users/doodl/my-app/src/hooksExercise.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef} from 'react';\r\nimport { ThemeContext, themes } from \"./themeContext\";\r\nimport './App.css';\r\nimport { Label, Note } from \"./types\"; // Import the Label type from the appropriate module\r\n\r\n\r\nexport function LikeButtonClicked(props: { setLikeNotes: React.Dispatch<React.SetStateAction<Note[]>>; \r\n                                            likeNotes: Note[]; \r\n                                            newNote: Note}) {\r\n\r\n    const [likeState, setLikeState] = useState(\"🤍\");\r\n    \r\n    useEffect(() => {\r\n        \r\n    }, [likeState]);\r\n\r\n    const toggleLike = () => {\r\n        setLikeState(likeState === \"🤍\" ? \"❤️\" : \"🤍\");\r\n\r\n        if (props.likeNotes.includes(props.newNote)) {\r\n            const newLikeNotes = props.likeNotes.filter(aNote => aNote !== props.newNote);\r\n            props.setLikeNotes([...newLikeNotes]);\r\n        }\r\n        else {\r\n            props.setLikeNotes([...props.likeNotes, props.newNote]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button onClick={toggleLike}>{likeState}</button>\r\n    );\r\n}\r\n\r\nexport function ToggleTheme() {\r\n    \r\n    const toggleTheme = () => {\r\n        setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // const app = document.getElementById(\"head\");\r\n        // if (app != null) {\r\n        //     app.style.backgroundColor = currentTheme.foreground;\r\n        //     app.style.color = currentTheme.background;\r\n        // }\r\n\r\n        // const form = document.getElementById(\"form\");\r\n        // if (form != null) {\r\n        //     form.style.backgroundColor = currentTheme.foreground;\r\n        //     form.style.color = currentTheme.background;\r\n        // }\r\n\r\n        // const noteList = document.getElementsByClassName(\"note-item\");\r\n        // for (let i = 0; i < noteList.length; i++) {\r\n        //     const aNote = noteList[i];\r\n        //     if (aNote instanceof HTMLElement) {\r\n        //         aNote.style.backgroundColor = currentTheme.foreground;\r\n        //         aNote.style.color = currentTheme.background;\r\n        //     }\r\n        // }\r\n    }, [toggleTheme]);\r\n   \r\n    return (\r\n      <ThemeContext.Provider value={currentTheme}>\r\n        <button onClick={toggleTheme}> Toggle Theme </button>\r\n        <br/>\r\n      </ThemeContext.Provider>\r\n    );\r\n}\r\n   \r\n\r\n\r\nfunction ClickCounter() {\r\n const [count, setCount] = useState(0);\r\n const theme = useContext(ThemeContext);\r\n\r\n const handleClick = () => {\r\n   setCount(count + 1);\r\n };\r\n\r\n useEffect(() => {\r\n   document.title = `You clicked ${count} times`;\r\n }, [count]);\r\n\r\n return (\r\n    <div\r\n    style={{\r\n      background: theme.background,\r\n      color: theme.foreground,\r\n      padding: \"20px\",\r\n    }}\r\n  >\r\n    <p>You clicked {count} times </p>\r\n    <button\r\n      onClick={() => setCount(count + 1)}\r\n      style={{ background: theme.foreground, color: theme.background }}\r\n    >\r\n      Click me\r\n    </button>\r\n  </div>\r\n\r\n );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}