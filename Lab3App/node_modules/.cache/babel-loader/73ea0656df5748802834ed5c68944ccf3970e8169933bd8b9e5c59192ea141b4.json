{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doodl\\\\my-app\\\\src\\\\hooksExercise.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { ThemeContext, themes } from \"./themeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LikeButtonClicked(props) {\n  _s();\n  const [likeState, setLikeState] = useState(\"&#x2661;\");\n  useEffect(() => {\n    props.setLikeNotes([]);\n  }, [likeState]);\n  const toggleLike = () => {\n    setLikeState(likeState === \"&#x2661;\" ? \"&#x2665;\" : \"&#x2661;\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleLike,\n    children: likeState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(LikeButtonClicked, \"DF36RtKZZofv3qMfMD9xjOtZL4c=\");\n_c = LikeButtonClicked;\nexport function LikeList() {}\n_c2 = LikeList;\nfunction ToggleTheme() {\n  _s2();\n  const [currentTheme, setCurrentTheme] = useState(themes.light);\n  const toggleTheme = () => {\n    setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: currentTheme,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      children: \" Toggle Theme \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ClickCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n_s2(ToggleTheme, \"XUkQGtkba25k8FAF8WwW2uStAco=\");\n_c3 = ToggleTheme;\nexport function ClickCounter() {\n  _s3();\n  const [count, setCount] = useState(0);\n  const theme = useContext(ThemeContext);\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: theme.background,\n      color: theme.foreground,\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      style: {\n        background: theme.foreground,\n        color: theme.background\n      },\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s3(ClickCounter, \"5AsnjtDRci7PAI4AJ9X2Rty94qc=\");\n_c4 = ClickCounter;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LikeButtonClicked\");\n$RefreshReg$(_c2, \"LikeList\");\n$RefreshReg$(_c3, \"ToggleTheme\");\n$RefreshReg$(_c4, \"ClickCounter\");","map":{"version":3,"names":["React","useState","useEffect","useContext","ThemeContext","themes","jsxDEV","_jsxDEV","LikeButtonClicked","props","_s","likeState","setLikeState","setLikeNotes","toggleLike","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","LikeList","_c2","ToggleTheme","_s2","currentTheme","setCurrentTheme","light","toggleTheme","dark","Provider","value","ClickCounter","_c3","_s3","count","setCount","theme","handleClick","document","title","style","background","color","foreground","padding","_c4","$RefreshReg$"],"sources":["C:/Users/doodl/my-app/src/hooksExercise.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { ThemeContext, themes } from \"./themeContext\";\r\n\r\nexport function LikeButtonClicked(props: { setLikeNotes: (arg0: never[]) => void; }) {\r\n\r\n    const [likeState, setLikeState] = useState(\"&#x2661;\");\r\n    useEffect(() => {\r\n        props.setLikeNotes([]);\r\n    }, [likeState]);\r\n\r\n    const toggleLike = () => {\r\n        setLikeState(likeState === \"&#x2661;\" ? \"&#x2665;\" : \"&#x2661;\");\r\n    }\r\n\r\n    return (\r\n        <button onClick={toggleLike}>{likeState}</button>\r\n    );\r\n}\r\n\r\nexport function LikeList() {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ToggleTheme() {\r\n    const [currentTheme, setCurrentTheme] = useState(themes.light);\r\n   \r\n    const toggleTheme = () => {\r\n      setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\r\n    };\r\n   \r\n    return (\r\n      <ThemeContext.Provider value={currentTheme}>\r\n        <button onClick={toggleTheme}> Toggle Theme </button>\r\n        <ClickCounter/>\r\n      </ThemeContext.Provider>\r\n    );\r\n}\r\n   \r\nexport function ClickCounter() {\r\n const [count, setCount] = useState(0);\r\n const theme = useContext(ThemeContext);\r\n\r\n const handleClick = () => {\r\n   setCount(count + 1);\r\n };\r\n\r\n useEffect(() => {\r\n   document.title = `You clicked ${count} times`;\r\n }, [count]);\r\n\r\n return (\r\n    <div\r\n    style={{\r\n      background: theme.background,\r\n      color: theme.foreground,\r\n      padding: \"20px\",\r\n    }}\r\n  >\r\n    <p>You clicked {count} times </p>\r\n    <button\r\n      onClick={() => setCount(count + 1)}\r\n      style={{ background: theme.foreground, color: theme.background }}\r\n    >\r\n      Click me\r\n    </button>\r\n  </div>\r\n\r\n );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}