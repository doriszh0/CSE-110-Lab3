{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doodl\\\\my-app\\\\src\\\\hooksExercise.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { ThemeContext, themes } from \"./themeContext\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LikeButtonClicked() {\n  _s();\n  const [likeState, setLikeState] = useState(\"🤍\");\n  // useEffect(() => {\n  //     props.setLikeNotes([]);\n  // }, [likeState]);\n\n  const toggleLike = () => {\n    setLikeState(likeState === \"🤍\" ? \"🖤\" : \"🤍\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleLike,\n    children: likeState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(LikeButtonClicked, \"1+9XlrU5Qv69pYwpshz3lhrhGnM=\");\n_c = LikeButtonClicked;\nexport function LikeList() {\n  _s2();\n  let [likeNotes, setLikeNotes] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-liked\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Favorites: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: likeNotes.map(title => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s2(LikeList, \"3woEk/Is3qq2ZPm2QMCX+6/b/28=\");\n_c2 = LikeList;\nfunction ToggleTheme() {\n  _s3();\n  const [currentTheme, setCurrentTheme] = useState(themes.light);\n  const toggleTheme = () => {\n    setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: currentTheme,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      children: \" Toggle Theme \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ClickCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n_s3(ToggleTheme, \"XUkQGtkba25k8FAF8WwW2uStAco=\");\n_c3 = ToggleTheme;\nexport function ClickCounter() {\n  _s4();\n  const [count, setCount] = useState(0);\n  const theme = useContext(ThemeContext);\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: theme.background,\n      color: theme.foreground,\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      style: {\n        background: theme.foreground,\n        color: theme.background\n      },\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s4(ClickCounter, \"5AsnjtDRci7PAI4AJ9X2Rty94qc=\");\n_c4 = ClickCounter;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LikeButtonClicked\");\n$RefreshReg$(_c2, \"LikeList\");\n$RefreshReg$(_c3, \"ToggleTheme\");\n$RefreshReg$(_c4, \"ClickCounter\");","map":{"version":3,"names":["React","useState","useEffect","useContext","ThemeContext","themes","jsxDEV","_jsxDEV","LikeButtonClicked","_s","likeState","setLikeState","toggleLike","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","LikeList","_s2","likeNotes","setLikeNotes","className","map","title","_c2","ToggleTheme","_s3","currentTheme","setCurrentTheme","light","toggleTheme","dark","Provider","value","ClickCounter","_c3","_s4","count","setCount","theme","handleClick","document","style","background","color","foreground","padding","_c4","$RefreshReg$"],"sources":["C:/Users/doodl/my-app/src/hooksExercise.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { ThemeContext, themes } from \"./themeContext\";\r\nimport './App.css';\r\n\r\nexport function LikeButtonClicked() {\r\n\r\n    const [likeState, setLikeState] = useState(\"🤍\");\r\n    // useEffect(() => {\r\n    //     props.setLikeNotes([]);\r\n    // }, [likeState]);\r\n\r\n    const toggleLike = () => {\r\n        setLikeState(likeState === \"🤍\" ? \"🖤\" : \"🤍\");\r\n    }\r\n\r\n    return (\r\n        <button onClick={toggleLike}>{likeState}</button>\r\n    );\r\n}\r\n\r\nexport function LikeList() {\r\n    let [likeNotes, setLikeNotes] = useState([]); \r\n    return (\r\n        <div className=\"notes-liked\">\r\n        <h2>List of Favorites: </h2>\r\n            <ul>\r\n                {likeNotes.map((title) => <li>{title}</li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ToggleTheme() {\r\n    const [currentTheme, setCurrentTheme] = useState(themes.light);\r\n   \r\n    const toggleTheme = () => {\r\n      setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\r\n    };\r\n   \r\n    return (\r\n      <ThemeContext.Provider value={currentTheme}>\r\n        <button onClick={toggleTheme}> Toggle Theme </button>\r\n        <ClickCounter/>\r\n      </ThemeContext.Provider>\r\n    );\r\n}\r\n   \r\nexport function ClickCounter() {\r\n const [count, setCount] = useState(0);\r\n const theme = useContext(ThemeContext);\r\n\r\n const handleClick = () => {\r\n   setCount(count + 1);\r\n };\r\n\r\n useEffect(() => {\r\n   document.title = `You clicked ${count} times`;\r\n }, [count]);\r\n\r\n return (\r\n    <div\r\n    style={{\r\n      background: theme.background,\r\n      color: theme.foreground,\r\n      padding: \"20px\",\r\n    }}\r\n  >\r\n    <p>You clicked {count} times </p>\r\n    <button\r\n      onClick={() => setCount(count + 1)}\r\n      style={{ background: theme.foreground, color: theme.background }}\r\n    >\r\n      Click me\r\n    </button>\r\n  </div>\r\n\r\n );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}